apiVersion: apps/v1
kind: Deployment
metadata:
  name: vep-service
  labels:
    app: vep-service
    component: vep-processor
    tier: backend
    app.kubernetes.io/name: vep-service
    app.kubernetes.io/component: vep-processor
    app.kubernetes.io/part-of: healthcare-ml-demo
  annotations:
    deployment.kubernetes.io/revision: "1"
    insights.openshift.io/cost-center: "genomics-research"
    insights.openshift.io/project: "vep-service-v1"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vep-service
      component: vep-processor
  template:
    metadata:
      labels:
        app: vep-service
        component: vep-processor
        tier: backend
      annotations:
        # Prometheus metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/q/metrics"
    spec:
      containers:
      - name: vep-service
        image: vep-service:latest
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "genetic-data-cluster-kafka-bootstrap.healthcare-ml-demo.svc.cluster.local:9092"
        - name: KAFKA_CONSUMER_GROUP
          value: "vep-service-group"
        - name: QUARKUS_PROFILE
          value: "openshift"
        - name: VEP_API_URL
          value: "https://rest.ensembl.org/vep/human/region"
        - name: KAFKA_TOPIC_GENETIC_DATA_RAW
          value: "genetic-data-raw"
        - name: KAFKA_TOPIC_GENETIC_DATA_ANNOTATED
          value: "genetic-data-annotated"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /q/health/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: vep-service
  labels:
    app: vep-service
    component: vep-processor
    tier: backend
  annotations:
    insights.openshift.io/cost-center: "genomics-research"
    insights.openshift.io/project: "vep-service-v1"
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: vep-service
    component: vep-processor
