apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

metadata:
  name: vep-service-multi-mode
  annotations:
    config.kubernetes.io/local-config: "true"
    description: "Multi-mode VEP service deployments for different scaling patterns"

# Clean Separation of Concerns: One file per scaling mode button
# Each mode has dedicated deployment + KEDA ScaledObject files
# Perfect 1:1 mapping: UI Button â†’ YAML files
resources:
  # Normal Mode (Button: #normalModeBtn)
  - vep-service-normal.yaml
  - vep-service-normal-keda.yaml

  # Big Data Mode (Button: #bigDataModeBtn)
  - vep-service-bigdata.yaml
  - vep-service-bigdata-keda.yaml

  # Node Scale Mode (Button: #nodeScaleModeBtn)
  - vep-service-nodescale.yaml
  - vep-service-nodescale-keda.yaml

  # Kafka Lag Mode (Button: #kafkaLagModeBtn)
  - vep-service-kafka-lag.yaml
  - vep-service-kafka-lag-keda.yaml

# Multi-mode specific labels
commonLabels:
  app.kubernetes.io/component: vep-service
  app.kubernetes.io/name: vep-annotation-service
  app.kubernetes.io/version: "1.0.0"
  deployment-type: "multi-mode"

# Multi-mode specific annotations
commonAnnotations:
  app.openshift.io/runtime: quarkus
  app.openshift.io/runtime-version: "3.8"
  insights.openshift.io/billing-model: chargeback
  insights.openshift.io/cost-center: genomics-research
  insights.openshift.io/project: vep-multi-mode-v1
  deployment-method: "multi-mode-kustomize"
  github-issue: "21"

# VEP service image configuration for all modes
images:
  - name: vep-service
    newName: image-registry.openshift-image-registry.svc:5000/healthcare-ml-demo/vep-service
    newTag: latest
