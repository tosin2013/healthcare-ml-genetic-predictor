apiVersion: apps/v1
kind: Deployment
metadata:
  name: quarkus-websocket-service
  labels:
    app: quarkus-websocket-service
    component: websocket
    tier: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quarkus-websocket-service
  template:
    metadata:
      labels:
        app: quarkus-websocket-service
        component: websocket
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/q/metrics"
    spec:
      containers:
      - name: websocket-service
        image: quarkus-websocket-service:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: "genetic-data-cluster-kafka-bootstrap.healthcare-ml-demo.svc.cluster.local:9092"
        - name: QUARKUS_PROFILE
          value: "openshift"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /q/health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /q/health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: quarkus-websocket-service
  labels:
    app: quarkus-websocket-service
    component: websocket
spec:
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  selector:
    app: quarkus-websocket-service
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: quarkus-websocket-service
  labels:
    app: quarkus-websocket-service
    component: websocket
spec:
  to:
    kind: Service
    name: quarkus-websocket-service
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
