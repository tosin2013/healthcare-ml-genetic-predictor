# Test Configuration for WebSocket Service Threading Tests
# This configuration isolates tests from external Kafka dependencies
# by using in-memory messaging connectors

# Application Configuration
quarkus.application.name=genetic-risk-predictor-websocket-test
quarkus.application.version=1.0.0-test

# HTTP Configuration for tests
quarkus.http.host=0.0.0.0
quarkus.http.port=8081
quarkus.http.test-port=0

# Test Profile - In-Memory Messaging Configuration
# Following VEP service pattern for test isolation

# Override all messaging channels to use in-memory connectors
# Outgoing Channel - Raw Genetic Data (used by ScalingTestController)
%test.mp.messaging.outgoing.genetic-data-raw-out.connector=smallrye-in-memory

# Incoming Channel - Annotated Genetic Data (used by GeneticResultsService)
%test.mp.messaging.incoming.genetic-data-annotated-in.connector=smallrye-in-memory

# Legacy messaging channels (from MyMessagingApplication)
%test.mp.messaging.outgoing.words-out.connector=smallrye-in-memory
%test.mp.messaging.incoming.words-in.connector=smallrye-in-memory
%test.mp.messaging.outgoing.uppercase.connector=smallrye-in-memory

# Test Logging Configuration
%test.quarkus.log.level=INFO
%test.quarkus.log.category."com.redhat.healthcare".level=DEBUG
%test.quarkus.log.console.enable=true
%test.quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Health Check Configuration for tests
%test.quarkus.health.enabled=true
%test.quarkus.health.openapi.included=true

# Metrics Configuration for tests
%test.quarkus.micrometer.enabled=true
%test.quarkus.micrometer.export.prometheus.enabled=false

# Security Configuration for tests
%test.quarkus.security.auth.enabled-in-dev-mode=false

# CloudEvents Configuration for tests
%test.cloudevents.source=/genetic-simulator/websocket-test
%test.cloudevents.type.prefix=com.healthcare.genetic.test

# WebSocket Configuration for tests
%test.quarkus.websockets-next.server.supported-subprotocols=genetics-v1

# Test-specific configurations
%test.quarkus.test.hang-detection-timeout=60s
%test.quarkus.test.flat-class-path=true

# Threading Test Configuration
# Ensure proper thread pool configuration for @Blocking annotation testing
%test.quarkus.thread-pool.core-threads=2
%test.quarkus.thread-pool.max-threads=8

# CORS Configuration for test HTTP requests
%test.quarkus.http.cors=true
%test.quarkus.http.cors.origins=*
%test.quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
%test.quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# Test Notes:
# - All Kafka messaging is replaced with in-memory connectors
# - Tests can run without external Kafka broker
# - Thread pool configuration supports @Blocking annotation testing
# - Logging is configured for debugging threading issues
# - Health checks and metrics are enabled for endpoint testing
