# Application Configuration
quarkus.application.name=genetic-risk-predictor-websocket
quarkus.application.version=1.0.0

# HTTP Configuration
quarkus.http.host=0.0.0.0
quarkus.http.port=8080

# WebSocket Configuration
quarkus.websockets-next.server.supported-subprotocols=genetics-v1

# Kafka Bootstrap Servers
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Kafka Producer Configuration - Raw Genetic Data
mp.messaging.outgoing.genetic-data-raw-out.connector=smallrye-kafka
mp.messaging.outgoing.genetic-data-raw-out.topic=genetic-data-raw
mp.messaging.outgoing.genetic-data-raw-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.genetic-data-raw-out.bootstrap.servers=${kafka.bootstrap.servers}

# Kafka Consumer Configuration - Processed Genetic Data
mp.messaging.incoming.genetic-data-processed-in.connector=smallrye-kafka
mp.messaging.incoming.genetic-data-processed-in.topic=genetic-data-processed
mp.messaging.incoming.genetic-data-processed-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.genetic-data-processed-in.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.genetic-data-processed-in.group.id=websocket-service-group

# Health Check Configuration
quarkus.health.enabled=true
quarkus.health.openapi.included=true

# Metrics Configuration
quarkus.micrometer.enabled=true
quarkus.micrometer.export.prometheus.enabled=true

# Logging Configuration
quarkus.log.level=INFO
quarkus.log.category."com.redhat.healthcare".level=DEBUG
quarkus.log.console.json=false

# Security Configuration (for future HIPAA compliance)
quarkus.security.auth.enabled-in-dev-mode=false

# CloudEvents Configuration
cloudevents.source=/genetic-simulator/websocket
cloudevents.type.prefix=com.healthcare.genetic

# VEP REST Client Configuration
vep-api/mp-rest/url=https://rest.ensembl.org
vep-api/mp-rest/scope=jakarta.inject.Singleton
vep-api/mp-rest/connectTimeout=5000
vep-api/mp-rest/readTimeout=10000

# Kafka Consumer Configuration - Raw Genetic Data for VEP Processing
mp.messaging.incoming.genetic-data-raw-in.connector=smallrye-kafka
mp.messaging.incoming.genetic-data-raw-in.topic=genetic-data-raw
mp.messaging.incoming.genetic-data-raw-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.genetic-data-raw-in.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.genetic-data-raw-in.group.id=vep-annotation-service-group

# Kafka Producer Configuration - Annotated Genetic Data
mp.messaging.outgoing.genetic-data-annotated-out.connector=smallrye-kafka
mp.messaging.outgoing.genetic-data-annotated-out.topic=genetic-data-annotated
mp.messaging.outgoing.genetic-data-annotated-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.genetic-data-annotated-out.bootstrap.servers=${kafka.bootstrap.servers}
